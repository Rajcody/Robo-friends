{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","Robots","cardComp","map","user","username","SearchBox","searchfield","search","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onSearch","event","setState","target","value","console","log","fetch","then","response","json","users","filterRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAiBeA,EAdH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GAEvB,OACI,sBAAKC,UAAU,wDAAf,UACG,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACC,6BAAKL,IACL,4BAAIC,WCgBDK,EAvBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACRC,EAAUD,EAAOE,KAAI,SAACC,EAAMR,GAC9B,OAAS,cAAC,EAAD,CAEJA,GAAIK,EAAOL,GAAIA,GACfF,KAAMO,EAAOL,GAAIF,KACjBW,SAAUJ,EAAOL,GAAIS,SACrBV,MAAOM,EAAOL,GAAID,OAJbC,MAWd,OACI,gCACIM,EADJ,QCDOI,EAfE,SAAC,GAAwB,EAAvBC,YAAwB,IAAXC,EAAU,EAAVA,OAC5B,OACI,qBAAKX,UAAU,OAAf,SACI,uBACAA,UAAU,mCACVY,KAAM,SACLC,YAAY,gBACZC,SAAWH,OCGTI,EATF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKJ,MAAM,CAACC,UAAU,M,oBAG1B,WACI,OAAGG,KAAKJ,MAAMC,SACJ,8CAEHG,KAAKX,MAAMK,a,GAhBCO,aCwEZC,G,wDAlEX,aAAc,IAAD,8BAGT,gBAUJC,SAAS,SAACC,GAEN,EAAKC,SAAS,CAACtB,YAAYqB,EAAME,OAAOC,QACxCC,QAAQC,IAAIL,EAAME,OAAOC,QAZzB,EAAKX,MAAM,CAEHnB,OAAQ,GACRM,YAAa,IAPZ,E,qDAuBb,WAAoB,IAAD,OACf2B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAK,EAAKT,SAAS,CAAC5B,OAAQqC,S,oBAK/C,WAAU,IAAD,OAECC,EAAef,KAAKJ,MAAMnB,OAAOuC,QAAO,SAAAvC,GAC1C,OAAOA,EAAOP,KAAK+C,cAAcC,SAAS,EAAKtB,MAAMb,YAAYkC,kBAIrE,OAA8B,IAA3BjB,KAAKJ,MAAMnB,OAAO0C,OACV,oBAAI9C,UAAU,KAAd,2BAIH,sBAAKA,UAAU,KAAf,UACI,8CAGA,cAAC,EAAD,CAAWW,OAAQgB,KAAKG,WACxB,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQsC,e,GAnDxBd,cCIHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5abe3120.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card =({name, email, id})=>{\r\n    \r\n    return(\r\n        <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n           <img src={`https://robohash.org/${id}?200x200`} alt=\"Roboo\" />\r\n           <div>\r\n            <h2>{name}</h2>    \r\n            <p>{email}</p>\r\n           </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({Robots})=>{\r\n    const cardComp= Robots.map((user, id)=>{\r\n        return ( <Card \r\n            key ={id}\r\n             id={Robots[id].id}\r\n             name={Robots[id].name}\r\n             username={Robots[id].username} \r\n             email={Robots[id].email} \r\n            />\r\n        )  \r\n    }\r\n\r\n    );\r\n\r\n    return (\r\n        <div>\r\n           {cardComp};\r\n\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchfield ,search})=>{\r\n    return (\r\n        <div className=\"pa2 \">\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type ='search'\r\n             placeholder='Search Robots'\r\n             onChange= {search}\r\n\r\n            />\r\n        </div>  \r\n\r\n\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n \r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll', border:'1px solid black', height:'600px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Scroll; ","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.state({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return<h1>OPPSS. Error</h1>\r\n        }\r\n        return this.props.children\r\n\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        // declare State\r\n        \r\n        super()\r\n        this.state={\r\n            \r\n                Robots: [],\r\n                searchfield: ''\r\n                \r\n            }\r\n\r\n        }\r\n        //on searching , we exute this function\r\n    onSearch=(event)=>{\r\n        //like dom\r\n        this.setState({searchfield:event.target.value});\r\n        console.log(event.target.value);\r\n        // now we have the values, lets communicate with the cardlist\r\n        \r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>response.json())\r\n            .then(users =>  this.setState({Robots: users}));\r\n        \r\n        \r\n    }\r\n\r\n    render() { \r\n        \r\n        const filterRobots = this.state.Robots.filter(Robots=>{\r\n            return Robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\r\n        })\r\n\r\n        if(this.state.Robots.length===0){\r\n           return  <h1 className='tc'>Loadinggg....</h1>\r\n        }\r\n        else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1>\r\n                        ROBO FRIENDS\r\n                    </h1>\r\n                    <SearchBox search={this.onSearch}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                        <CardList Robots={filterRobots}/>\r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n    \r\n\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}